/**
 * flexcheckin
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.swagger.client.model;

import io.swagger.client.model.Href;
import io.swagger.client.model.IdAndHref;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class Validation {
  
  @SerializedName("scannerNumber")
  private String scannerNumber = null;
  @SerializedName("teamName")
  private String teamName = null;
  @SerializedName("teamGroupName")
  private String teamGroupName = null;
  public enum ValidationResultEnum {
     TICKET_OK,  MEMBER_OK,  MEMBER_NOT_PAID,  TICKET_VOIDED,  SCAN_COUNT_EXCEEDED,  WRONG_TICKET_TYPE,  NOT_RECOGNIZED,  TEAM_ACCESS_OK,  TEAM_ACCESS_BACKEND_OFFLINE,  TEAM_ACCESS_ALREADY_SCANNED,  TEAM_ACCESS_NO_SESSION_OPENED,  TEAM_ACCESS_NO_MORE_SESSIONS,  TEAM_ACCESS_BARCODE_INVALID,  TEAM_ACCESS_NO_MORE_PREPAID_SESSIONS,  TEAM_ACCESS_UNKNOWN_RESULT_CODE, 
  };
  @SerializedName("validationResult")
  private ValidationResultEnum validationResult = null;
  @SerializedName("created")
  private Long created = null;
  @SerializedName("memberName")
  private String memberName = null;
  @SerializedName("ticketType")
  private IdAndHref ticketType = null;
  @SerializedName("id")
  private String id = null;
  @SerializedName("checkinSession")
  private Href checkinSession = null;
  @SerializedName("remainingValidUseCount")
  private Integer remainingValidUseCount = null;
  @SerializedName("barCode")
  private String barCode = null;
  @SerializedName("scannerStationName")
  private String scannerStationName = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public String getScannerNumber() {
    return scannerNumber;
  }
  public void setScannerNumber(String scannerNumber) {
    this.scannerNumber = scannerNumber;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getTeamName() {
    return teamName;
  }
  public void setTeamName(String teamName) {
    this.teamName = teamName;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getTeamGroupName() {
    return teamGroupName;
  }
  public void setTeamGroupName(String teamGroupName) {
    this.teamGroupName = teamGroupName;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public ValidationResultEnum getValidationResult() {
    return validationResult;
  }
  public void setValidationResult(ValidationResultEnum validationResult) {
    this.validationResult = validationResult;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Long getCreated() {
    return created;
  }
  public void setCreated(Long created) {
    this.created = created;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getMemberName() {
    return memberName;
  }
  public void setMemberName(String memberName) {
    this.memberName = memberName;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public IdAndHref getTicketType() {
    return ticketType;
  }
  public void setTicketType(IdAndHref ticketType) {
    this.ticketType = ticketType;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getId() {
    return id;
  }
  public void setId(String id) {
    this.id = id;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Href getCheckinSession() {
    return checkinSession;
  }
  public void setCheckinSession(Href checkinSession) {
    this.checkinSession = checkinSession;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Integer getRemainingValidUseCount() {
    return remainingValidUseCount;
  }
  public void setRemainingValidUseCount(Integer remainingValidUseCount) {
    this.remainingValidUseCount = remainingValidUseCount;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getBarCode() {
    return barCode;
  }
  public void setBarCode(String barCode) {
    this.barCode = barCode;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getScannerStationName() {
    return scannerStationName;
  }
  public void setScannerStationName(String scannerStationName) {
    this.scannerStationName = scannerStationName;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Validation validation = (Validation) o;
    return (this.scannerNumber == null ? validation.scannerNumber == null : this.scannerNumber.equals(validation.scannerNumber)) &&
        (this.teamName == null ? validation.teamName == null : this.teamName.equals(validation.teamName)) &&
        (this.teamGroupName == null ? validation.teamGroupName == null : this.teamGroupName.equals(validation.teamGroupName)) &&
        (this.validationResult == null ? validation.validationResult == null : this.validationResult.equals(validation.validationResult)) &&
        (this.created == null ? validation.created == null : this.created.equals(validation.created)) &&
        (this.memberName == null ? validation.memberName == null : this.memberName.equals(validation.memberName)) &&
        (this.ticketType == null ? validation.ticketType == null : this.ticketType.equals(validation.ticketType)) &&
        (this.id == null ? validation.id == null : this.id.equals(validation.id)) &&
        (this.checkinSession == null ? validation.checkinSession == null : this.checkinSession.equals(validation.checkinSession)) &&
        (this.remainingValidUseCount == null ? validation.remainingValidUseCount == null : this.remainingValidUseCount.equals(validation.remainingValidUseCount)) &&
        (this.barCode == null ? validation.barCode == null : this.barCode.equals(validation.barCode)) &&
        (this.scannerStationName == null ? validation.scannerStationName == null : this.scannerStationName.equals(validation.scannerStationName));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.scannerNumber == null ? 0: this.scannerNumber.hashCode());
    result = 31 * result + (this.teamName == null ? 0: this.teamName.hashCode());
    result = 31 * result + (this.teamGroupName == null ? 0: this.teamGroupName.hashCode());
    result = 31 * result + (this.validationResult == null ? 0: this.validationResult.hashCode());
    result = 31 * result + (this.created == null ? 0: this.created.hashCode());
    result = 31 * result + (this.memberName == null ? 0: this.memberName.hashCode());
    result = 31 * result + (this.ticketType == null ? 0: this.ticketType.hashCode());
    result = 31 * result + (this.id == null ? 0: this.id.hashCode());
    result = 31 * result + (this.checkinSession == null ? 0: this.checkinSession.hashCode());
    result = 31 * result + (this.remainingValidUseCount == null ? 0: this.remainingValidUseCount.hashCode());
    result = 31 * result + (this.barCode == null ? 0: this.barCode.hashCode());
    result = 31 * result + (this.scannerStationName == null ? 0: this.scannerStationName.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class Validation {\n");
    
    sb.append("  scannerNumber: ").append(scannerNumber).append("\n");
    sb.append("  teamName: ").append(teamName).append("\n");
    sb.append("  teamGroupName: ").append(teamGroupName).append("\n");
    sb.append("  validationResult: ").append(validationResult).append("\n");
    sb.append("  created: ").append(created).append("\n");
    sb.append("  memberName: ").append(memberName).append("\n");
    sb.append("  ticketType: ").append(ticketType).append("\n");
    sb.append("  id: ").append(id).append("\n");
    sb.append("  checkinSession: ").append(checkinSession).append("\n");
    sb.append("  remainingValidUseCount: ").append(remainingValidUseCount).append("\n");
    sb.append("  barCode: ").append(barCode).append("\n");
    sb.append("  scannerStationName: ").append(scannerStationName).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
