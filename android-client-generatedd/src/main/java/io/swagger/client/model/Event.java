/**
 * flexcheckin
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.swagger.client.model;

import io.swagger.client.model.TicketType;
import java.util.*;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class Event {
  
  @SerializedName("eventEnd")
  private Long eventEnd = null;
  @SerializedName("name")
  private String name = null;
  @SerializedName("ticketTypes")
  private List<TicketType> ticketTypes = null;
  @SerializedName("description")
  private String description = null;
  @SerializedName("eventStart")
  private Long eventStart = null;
  @SerializedName("registrationEnd")
  private Long registrationEnd = null;
  @SerializedName("shortDescription")
  private String shortDescription = null;
  @SerializedName("registrationStart")
  private Long registrationStart = null;
  @SerializedName("key")
  private String key = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public Long getEventEnd() {
    return eventEnd;
  }
  public void setEventEnd(Long eventEnd) {
    this.eventEnd = eventEnd;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public List<TicketType> getTicketTypes() {
    return ticketTypes;
  }
  public void setTicketTypes(List<TicketType> ticketTypes) {
    this.ticketTypes = ticketTypes;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getDescription() {
    return description;
  }
  public void setDescription(String description) {
    this.description = description;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Long getEventStart() {
    return eventStart;
  }
  public void setEventStart(Long eventStart) {
    this.eventStart = eventStart;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Long getRegistrationEnd() {
    return registrationEnd;
  }
  public void setRegistrationEnd(Long registrationEnd) {
    this.registrationEnd = registrationEnd;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getShortDescription() {
    return shortDescription;
  }
  public void setShortDescription(String shortDescription) {
    this.shortDescription = shortDescription;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Long getRegistrationStart() {
    return registrationStart;
  }
  public void setRegistrationStart(Long registrationStart) {
    this.registrationStart = registrationStart;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public String getKey() {
    return key;
  }
  public void setKey(String key) {
    this.key = key;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Event event = (Event) o;
    return (this.eventEnd == null ? event.eventEnd == null : this.eventEnd.equals(event.eventEnd)) &&
        (this.name == null ? event.name == null : this.name.equals(event.name)) &&
        (this.ticketTypes == null ? event.ticketTypes == null : this.ticketTypes.equals(event.ticketTypes)) &&
        (this.description == null ? event.description == null : this.description.equals(event.description)) &&
        (this.eventStart == null ? event.eventStart == null : this.eventStart.equals(event.eventStart)) &&
        (this.registrationEnd == null ? event.registrationEnd == null : this.registrationEnd.equals(event.registrationEnd)) &&
        (this.shortDescription == null ? event.shortDescription == null : this.shortDescription.equals(event.shortDescription)) &&
        (this.registrationStart == null ? event.registrationStart == null : this.registrationStart.equals(event.registrationStart)) &&
        (this.key == null ? event.key == null : this.key.equals(event.key));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.eventEnd == null ? 0: this.eventEnd.hashCode());
    result = 31 * result + (this.name == null ? 0: this.name.hashCode());
    result = 31 * result + (this.ticketTypes == null ? 0: this.ticketTypes.hashCode());
    result = 31 * result + (this.description == null ? 0: this.description.hashCode());
    result = 31 * result + (this.eventStart == null ? 0: this.eventStart.hashCode());
    result = 31 * result + (this.registrationEnd == null ? 0: this.registrationEnd.hashCode());
    result = 31 * result + (this.shortDescription == null ? 0: this.shortDescription.hashCode());
    result = 31 * result + (this.registrationStart == null ? 0: this.registrationStart.hashCode());
    result = 31 * result + (this.key == null ? 0: this.key.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class Event {\n");
    
    sb.append("  eventEnd: ").append(eventEnd).append("\n");
    sb.append("  name: ").append(name).append("\n");
    sb.append("  ticketTypes: ").append(ticketTypes).append("\n");
    sb.append("  description: ").append(description).append("\n");
    sb.append("  eventStart: ").append(eventStart).append("\n");
    sb.append("  registrationEnd: ").append(registrationEnd).append("\n");
    sb.append("  shortDescription: ").append(shortDescription).append("\n");
    sb.append("  registrationStart: ").append(registrationStart).append("\n");
    sb.append("  key: ").append(key).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
